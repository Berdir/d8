<?php
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_type_alter().
 */
function migrate_drupal_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Config\Entity\ConfigEntityType[] $entity_types */
  $entity_types['migration']
    ->setClass('Drupal\migrate_drupal\Entity\Migration')
    ->setControllerClass('storage', 'Drupal\migrate_drupal\MigrationStorage');
}

/**
 * Implements hook_module_implements_alter().
 */
function migrate_drupal_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'node_presave') {
    // migrate_drupal_node_presave() duplicates book_node_presave with a
    // migrate kill switch built in.
    unset($implementations['book']);
  }
}

/**
 * Implements hook_node_presave().
 */
function migrate_drupal_node_presave(EntityInterface $node) {
  // Always save a revision for non-administrators.
  if (empty($node->beingMigrated) && !empty($node->book['bid']) && !\Drupal::currentUser()->hasPermission('administer nodes')) {
    $node->setNewRevision();
  }
  // Make sure a new node gets a new menu link.
  if ($node->isNew()) {
    $node->book['nid'] = NULL;
  }
}
