<?php

/**
 * Runs major version upgrade tests for the bare database.
 *
 * Load an empty installation of Drupal 7 and run the upgrade process on it.
 */
class MajorBareUpgradePathTestCase extends MajorUpgradePathNGTestCase {
  public static function getInfo() {
    return array(
      'name'  => 'Major version bare upgrade test.',
      'description'  => 'Bare upgrade test from 7.x to 8.x.',
      'group' => 'Upgrade path',
    );
  }

  /**
   * Tests a bare upgrade.
   */
  public function testBareUpgrade() {
    $this->assertTrue($this->performUpgrade(), t('The upgrade was completed successfully.'));

    // Ensure that the new Entity module is enabled after upgrade.
    $this->assertTrue(module_exists('entity'), 'Entity module enabled after upgrade.');
  }
}

/**
 * Runs minor version upgrade tests for the bare database.
 *
 * Load an empty installation of Drupal 7 and run the upgrade process on it.
 */
class MinorBareUpgradePathTestCase extends MinorUpgradePathNGTestCase {
  public static function getInfo() {
    return array(
      'name'  => 'Minor version bare upgrade test.',
      'description'  => 'Bare upgrade test from 8.x to 8.x',
      'group' => 'Upgrade path',
    );
  }

  /**
   * Test a successful upgrade.
   */
  public function testBareUpgrade() {
    $this->assertTrue($this->performUpgrade(), t('The upgrade was completed successfully.'));

    // Ensure that the new Entity module is enabled after upgrade.
    $this->assertTrue(module_exists('entity'), 'Entity module enabled after upgrade.');
  }
}
